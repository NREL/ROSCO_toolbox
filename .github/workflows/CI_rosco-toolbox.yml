name: CI_rosco-toolbox

# We run CI on push commits on all branches
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"] #, "macOS-latest"]
        python-version: ["3.8"]
        
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge, general
          auto-update-conda: true
          python-version: 3.8
          environment-file: environment.yml
          # activate-environment: rosco-env


      # Install dependencies of ROSCO toolbox
      - name: Add dependencies ubuntu specific
        if: false == contains( matrix.os, 'windows')
        shell: bash # putting in a shell command makes for compile linking problems later
        # (if you use the shell here, cannot use 'compiler' package, but mpi only seems to work with it)
        run: |
          conda install -y compilers
          conda install -y wisdem
      # Install dependencies of ROSCO toolbox specific to windows
      # - name: Add dependencies windows specific
      #   if: contains( matrix.os, 'windows')
      #   run: |
      #     conda install -y m2w64-toolchain libpython
      # Debugging session
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3
        

      # Install ROSCO toolbox
      - name: Install ROSCO toolbox
        shell: bash
        run: |
          python setup.py develop --compile-rosco
          
  run_examples:
    name: run_examples
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"] #, "macOS-latest"]
        python-version: ["3.8"]
        
    steps:
      # - name: Checkout repository and submodules
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      # - name: Setup environment
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge, general
          auto-update-conda: true
          python-version: 3.8
          environment-file: environment.yml
          activate-environment: rosco-env


      # Install dependencies of ROSCO toolbox
      - name: Add dependencies ubuntu specific
        if: false == contains( matrix.os, 'windows')
        # shell: bash # putting in a shell command makes for compile linking problems later
        # (if you use the shell here, cannot use 'compiler' package, but mpi only seems to work with it)
        run: |
          conda install -y compilers
          conda install -y wisdem
      # Install dependencies of ROSCO toolbox specific to windows
      # - name: Add dependencies windows specific
      #   if: contains( matrix.os, 'windows')
      #   run: |
      #     conda install -y m2w64-toolchain libpython
      # Debugging session
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      # Install ROSCO toolbox
      - name: Install ROSCO toolbox
        # shell: bash
        run: |
          python setup.py develop --compile-rosco

      # Install OpenFAST
      - name: Install OpenFAST
        # shell: bash
        run: |
          conda install openfast
          
      # Run examples
      - name: Run examples
        # shell: bash
        run: |
          cd Examples
          python run_examples.py
          
